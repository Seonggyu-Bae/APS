"""
1부터 N까지의 자연수를 이진 탐색 트리에 저장하려고 한다.
이진 탐색 트리는 어떤 경우에도 저장된 값이
왼쪽 서브트리의 루트 <현재 노드 <오른쪽 서브 트리의 루트인 규칙을 만족한다.

완전 이진 트리의 노드 번호는 루트를 1번으로 하고 아래로 내려가면서 왼쪽에서 오른쪽 순으로 증가한다.
N이 주어졌을 때 완전 이진 트리로 만든 이진 탐색 트리의 루트에 저장된 값과,
N/2번 노드(N이 홀수인 경우 소수점 버림)에 저장된 값을 출력하는 프로그램을 만드시오.
"""


def inorder(n):
    global count
    if n <= N:
        inorder(2 * n)
        bst[n] = count
        count += 1
        inorder(2 * n + 1)
"""
이진 탐색 트리가 어떻게 만들어지는가?
만들어진걸 보니 중위 순회 방법으로 만들어진다
맨 왼쪽 루트 번호는 2^n다.
"""

T = int(input())

for tc in range(1, T + 1):
    N = int(input())
    bst = [0] * (N + 1)
    count = 1
    inorder(count)

    print(f'#{tc}', bst[1], bst[N // 2])
